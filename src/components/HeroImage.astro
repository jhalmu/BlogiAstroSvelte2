---
interface Props {
  image: {
    src: string;
    alt: string;
    width?: number;
    height?: number;
  };
  overlayOpacity?: number;
  tintColor?: string;
  height?: string;
  priority?: boolean;
  title: string;
  description?: string;
  lastUpdated?: string;
  tags?: string[];
}

const {
  image,
  overlayOpacity = 40,
  tintColor = 'rgb(167, 139, 250)',
  height = 'h-[550px]',
  priority = false,
  title,
  description,
  lastUpdated,
  tags = []
} = Astro.props;

// Format the date nicely
const formatDate = (dateString: string) => {
  if (!dateString) return '';
  const date = new Date(dateString);
  return new Intl.DateTimeFormat('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  }).format(date);
};

const formattedDate = lastUpdated ? formatDate(lastUpdated) : '';
---

<div class="container mx-auto px-4" style="margin-top: calc(3.5rem)">
  <section class='relative py-12 md:py-20 overflow-hidden rounded-3xl w-full min-h-[330px] flex items-center'>
    <div
      class='absolute inset-0 bg-[radial-gradient(circle_at_-20%_-20%,#1e40af,#1e40af_20%,#581c87_40%,#6b21a8_60%,#7e22ce_80%,#1e40af_100%)] opacity-90 rounded-3xl'
    >
    </div>
    <div
      class='absolute inset-0 bg-[radial-gradient(circle_at_-20%_-20%,rgba(255,255,255,0.2),transparent_70%)] rounded-3xl'
    >
    </div>

    {/* Background image */}
    <img
      src={image.src}
      alt={image.alt}
      width={image.width}
      height={image.height}
      class="absolute inset-0 w-full h-full object-cover mix-blend-overlay opacity-60 sr-only"
      loading={priority ? "eager" : "lazy"}
      decoding="async"
      aria-hidden="true"
    />

    <div class='relative w-full z-10'>
      <div class='max-w-3xl mx-auto'>
        {/* Tags */}
        {tags && tags.length > 0 && (
          <div class="flex flex-wrap gap-2 mb-4 justify-center">
            {tags.map(tag => (
              <span class="px-3 py-1 bg-purple-100 bg-opacity-20 text-purple-50 rounded-full text-sm">
                {tag}
              </span>
            ))}
          </div>
        )}

        {/* Title */}
        <h1 class='font-montserrat font-bold text-4xl md:text-6xl text-white mb-6 leading-tight text-center'>
          {title}
        </h1>

        {/* Description */}
        {description && (
          <p class='font-montserrat font-light text-xl md:text-2xl text-purple-100 mb-4 text-center'>
            {description}
          </p>
        )}

        {/* Last Updated */}
        {formattedDate && (
          <p class="text-purple-200 text-sm text-center">
            Last updated: {formattedDate}
          </p>
        )}
      </div>
    </div>
  </section>
</div>

<style>
  .hero-container {
    perspective: 1500px;
  }

  .hero-image {
    transform-style: preserve-3d;
    transition: transform 0.5s ease-out;
  }

  .hero-image:hover {
    transform: translateZ(20px);
  }

  .hero-image::after {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(
      to bottom,
      transparent 0%,
      rgba(0, 0, 0, 0.5) 100%
    );
    pointer-events: none;
  }
</style>
