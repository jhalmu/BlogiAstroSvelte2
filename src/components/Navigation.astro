---
import NavAvatar from './NavAvatar.astro';

const navItems = [
  { href: '/', text: 'Home' },
  { href: '/blog', text: 'Blog' },
]

const currentPath = Astro.url.pathname
---

<nav class='h-52 relative' aria-label='Main navigation'>
  <!-- Inverted mountain background -->
  <div
    class='absolute inset-0 bg-no-repeat bg-bottom bg-cover'
    style="background-image: url('/mountains-nav.svg')"
    aria-hidden='true'
  >
  </div>

  <!-- Navigation content -->
  <div class='relative z-10 flex flex-col h-full px-12'>
    <!-- Top navigation links -->
    <div class='flex justify-end space-x-8 pt-7' role='menubar'>
      {
        navItems.map((item) => {
          const isActive =
            currentPath === item.href ||
            (item.href !== '/' && currentPath.startsWith(item.href))
          return (
            <a
              href={item.href}
              role='menuitem'
              class:list={[
                'relative py-1 transition-all duration-300',
                isActive
                  ? 'font-bold text-gray-950'
                  : 'font-medium text-gray-700 hover:text-gray-900',
                'visited:text-gray-700 visited:font-medium',
                !isActive && [
                  'after:absolute after:bottom-0 after:left-0 after:w-full after:h-0.5',
                  'after:bg-gray-900 after:transform after:scale-x-0',
                  'after:transition-transform after:duration-300 after:origin-bottom-right',
                  'hover:after:scale-x-100 hover:after:origin-bottom-left',
                ],
              ]}
              aria-current={isActive ? 'page' : undefined}
              aria-label={`${item.text} ${isActive ? '(current page)' : ''}`}
              tabindex={isActive ? '-1' : '0'}
            >
              <span class='sr-only'>{isActive ? 'Current page: ' : ''}</span>
              {item.text}
            </a>
          )
        })
      }
    </div>

    <!-- Brand section -->
    <div class='flex items-center space-x-8 mt-8'>
      <a href='/' class='block' aria-label='Home page'>
        <NavAvatar />
      </a>
      <h1
        class="text-3xl md:text-5xl lg:text-6xl font-['Playfair_Display'] font-semibold text-purple-900 opacity-70 tracking-wide hover:opacity-90 transition-opacity duration-300"
        id='site-title'
      >
        <span class='font-light'>Juha</span>
        <span class='font-bold'>Halmu</span>
      </h1>
    </div>
  </div>
</nav>

<style>
  /* Ensure focus indicators are visible */
  a:focus-visible {
    outline: 2px solid #4f46e5;
    outline-offset: 2px;
    border-radius: 2px;
  }

  /* Hide focus ring when using mouse */
  a:focus:not(:focus-visible) {
    outline: none;
  }
</style>

<script>
  // Add keyboard navigation
  const menuItems =
    document.querySelectorAll<HTMLAnchorElement>('[role="menuitem"]')

  menuItems.forEach((item: HTMLAnchorElement) => {
    item.addEventListener('keydown', (e: KeyboardEvent) => {
      if (!(e.target instanceof HTMLElement)) return

      const items = Array.from(menuItems)
      const index = items.indexOf(item)
      let nextItem: HTMLAnchorElement

      switch (e.key) {
        case 'ArrowRight':
        case 'ArrowDown':
          e.preventDefault()
          nextItem = items[index + 1] || items[0]
          nextItem.focus()
          break
        case 'ArrowLeft':
        case 'ArrowUp':
          e.preventDefault()
          nextItem = items[index - 1] || items[items.length - 1]
          nextItem.focus()
          break
        case 'Home':
          e.preventDefault()
          items[0].focus()
          break
        case 'End':
          e.preventDefault()
          items[items.length - 1].focus()
          break
      }
    })
  })
</script>
