---
import Layout from '../layouts/Layout.astro';
import { isDevMode } from '../config/database';
---

<Layout title="Login - Juha Halmun Sanatoorio">
  <main class="min-h-screen py-12 px-6">
    <div class="max-w-md mx-auto bg-white p-8 rounded-lg shadow-lg">
      <h1 class="text-3xl font-bold text-center text-purple-900 mb-8">Login</h1>
      
      <form id="loginForm" class="space-y-6">
        <div id="errorMessage" class="hidden bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4">
        </div>
        
        <div>
          <label for="email" class="block text-sm font-medium text-gray-700 mb-1">
            Email
          </label>
          <input
            type="email"
            id="email"
            name="email"
            required
            autocomplete="email"
            class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-purple-500 focus:border-purple-500"
            placeholder="your@email.com"
          />
        </div>
        
        <div>
          <label for="password" class="block text-sm font-medium text-gray-700 mb-1">
            Password
          </label>
          <input
            type="password"
            id="password"
            name="password"
            required
            autocomplete="current-password"
            minlength="8"
            class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-purple-500 focus:border-purple-500"
          />
          <p class="mt-1 text-sm text-gray-500">
            Minimum 8 characters
          </p>
        </div>

        <button
          type="submit"
          id="submitButton"
          class="w-full bg-purple-600 text-white py-2 px-4 rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 transition-colors duration-200 flex items-center justify-center"
        >
          <span>Sign In</span>
          <svg id="loadingIcon" class="hidden animate-spin ml-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
        </button>
      </form>

      {isDevMode() && (
        <div class="mt-4 text-center text-sm text-gray-600">
          <p>Demo credentials:</p>
          <p>Email: admin@example.com</p>
          <p>Password: password</p>
        </div>
      )}
    </div>
  </main>
</Layout>

<script>
  const loginForm = document.getElementById('loginForm') as HTMLFormElement;
  const errorDiv = document.getElementById('errorMessage');
  const submitButton = document.getElementById('submitButton') as HTMLButtonElement;
  const loadingIcon = document.getElementById('loadingIcon');

  // Check if already logged in
  if (localStorage.getItem('auth_token')) {
    window.location.href = '/admin';
  }

  if (loginForm) {
    loginForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      if (submitButton) {
        submitButton.disabled = true;
        loadingIcon?.classList.remove('hidden');
      }

      if (errorDiv) {
        errorDiv.classList.add('hidden');
      }
      
      try {
        const formData = new FormData(loginForm);
        const response = await fetch('/api/auth/login', {
          method: 'POST',
          body: formData,
        });
        
        const data = await response.json();
        
        if (response.ok && data.success) {
          // Store auth token
          if (data.token) {
            localStorage.setItem('auth_token', data.token);
          }

          // Show success message briefly before redirect
          if (errorDiv) {
            errorDiv.textContent = 'Login successful! Redirecting...';
            errorDiv.classList.remove('hidden', 'bg-red-100', 'border-red-400', 'text-red-700');
            errorDiv.classList.add('bg-green-100', 'border-green-400', 'text-green-700');
          }
          
          // Redirect after a short delay
          setTimeout(() => {
            window.location.href = '/admin';
          }, 1000);
        } else {
          // Show error message
          if (errorDiv) {
            errorDiv.textContent = data.message || 'Login failed';
            errorDiv.classList.remove('hidden');
          }
        }
      } catch (error) {
        // Show error message
        if (errorDiv) {
          errorDiv.textContent = 'An error occurred. Please try again.';
          errorDiv.classList.remove('hidden');
        }
      } finally {
        if (submitButton) {
          submitButton.disabled = false;
          loadingIcon?.classList.add('hidden');
        }
      }
    });
  }

  // Add password validation
  const passwordInput = document.getElementById('password') as HTMLInputElement;
  if (passwordInput) {
    passwordInput.addEventListener('input', () => {
      const isValid = passwordInput.value.length >= 8;
      passwordInput.setCustomValidity(isValid ? '' : 'Password must be at least 8 characters long');
    });
  }
</script>
